import { Box, TextField } from '@mui/material'
import Head from 'next/head'
import React from 'react'
import styled from 'styled-components'
import { NumberFormatCustom } from '../../components/number/number'
import FormControl from '@mui/material/FormControl'
import Button from '@mui/material/Button'
import { theme } from '../../../styles/theme'
import UseYearToMonthConverter from '../../components/mesAno'
import ConversionForm from '../../components/mesAno'
import YearToMonthForm from '../../components/mesAno'
import Porcentagens from '../../components/Porcentagem'
import CustomizedTables from './TableSac'
import MyComponent from './table-1'
import { Amortizacao } from './Amortizacao'
import CustomizedTable from './table-1'


const Title = styled.h1`
  color:${theme.colors.AzulEscuro};
`
type Item = {
    amortizacao: number,
    valorInicial: number,
    entrada: number,
    porMes: number,
    porAno: number,
    parecelaMes: number,
    parecelaAno: number,
};





export default function Home() {
    const [Meses, setMeses] = React.useState('');
    const [values, setValues] = React.useState<Item>({
        // Valor inicial a pagar 
        valorInicial: 0,

        // Número de parcelas  
        parecelaMes: 0,
        parecelaAno: 0,

        // Porcentagem por mes ou ano 
        porMes: 0,
        porAno: 0,

        // Valor entrada 
        entrada: 0,
        // amortização 
        amortizacao: 0,
    })
   
    console.log('qual mês?', Meses)
    const valores = [{
        simble: 'R$',
        name: 'valorInicial',
        value: values.valorInicial,
        label: 'Valor Financiado',
    },
    {
        simble: 'R$',
        name: 'entrada',
        value: values.entrada,
        label: 'Valor de Entrada'
        },
        {
            simble: 'R$',
            name: 'amortizacao',
            value: values.amortizacao,
            label: 'amortizacao'
        }
    ]


    const handlenChange = (event: { target: { value: any; name: any } }) => {
        const fieldValue = event.target.value;
        const fieldName = event.target.name;

        

        setValues((currenetValues) => {
            return {
                ...currenetValues,
                [fieldName]: fieldValue
            }
        })

    }
    const valorInicial =values.valorInicial
    const valorEntrada = values.entrada
    const parcelaMes = Meses
    const [count, setCount] = React.useState(30);
    function submit(e: { preventDefault: () => void }) {
        e.preventDefault()
      
        Amortizacao({ valorInicial, valorEntrada, parcelaMes })
       
        addPessoa( 'nome', 3 , 'sexo' )
        
    }

    // console.log("valor inicial", values.valorInicial)

    interface Pessoa {
        nome: string;
        idade: number;
        sexo: string;
      }
      
      const [state, setState] = React.useState<{ pessoas: Pessoa[] }>({ pessoas: [] });
    console.log(state.pessoas)
      function addPessoa(nome: string, idade: number, sexo: string) {
        setState((prevState) => {
          return {...prevState, pessoas: [...prevState.pessoas, { nome, idade, sexo }]};
        });
      }
    return (
        <>
           
            <Head>
                <title>Calculo Tabela SAC</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Title>
                oii
            </Title>
            {/* <MyComponent/> */}
            <Box
                sx={{
                    width: 700,
                    height: 300,
                    margin: 'auto',
                    // backgroundColor: 'primary.dark',
                    // '&:hover': {
                    //   backgroundColor: 'primary.main',
                    //   opacity: [0.9, 0.8, 0.7],
                    // },
                }}
            >
                <form >
                
                    <FormControl
                        color='info'
                        sx={{
                            display: 'flex',
                            flexWrap: 'wrap',
                            flexDirection: 'row',
                            justifyContent: 'space-around',
                        }} variant="standard"  >
                        {valores.map((item) => (
                            <>

                                <TextField
                                    label={item.label}
                                    value={item.value}
                                    name={item.name}
                                    required
                                    onChange={handlenChange}
                                    margin="normal"
                                    id="formatted-numberformat-input"
                                    InputProps={{
                                        inputComponent: NumberFormatCustom as any,
                                    }}
                                    variant="outlined"
                                />
                            </>
                        ))}
                        <YearToMonthForm setMeses={setMeses} />
                        <Porcentagens/>
                      
                    </FormControl>
                    <Button onClick={submit}>vai caraio</Button>
                </form>
               
            </Box>
            {/* <CustomizedTable/> */}
            <CustomizedTables valorInicial={valorInicial} valorEntrada={valorEntrada} parcelaMes={ parcelaMes }/> 
            
        </>
    )
}
